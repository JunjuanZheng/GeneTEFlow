//HPC LSF10 configuration
process.executor = 'lsf'
process {
  queue = 'short'

  withName: Make_STARindex {
        queue = 'short'
        clusterOptions = '-app large -n 8 -R "span[hosts=1]"'
  } 


  withName: squireFetch {
        queue = 'short'
        clusterOptions = '-app large -n 8 -R "span[hosts=1]"'
  }
  
  withName: squireMap {
        queue = 'short'
        clusterOptions = '-app large -n 8 -R "span[hosts=1]"'
  }
  
  withName: squireCountProcess {
        queue = 'short'
        clusterOptions = ' -n 8 -R "span[hosts=1]"'
  }


  withName: RSEMwithSTAR {
        queue = 'short'
        clusterOptions = '-app large -n 8 -R "span[hosts=1]"'
  } 

  withName: Trim_Adapters {
        queue = 'short'
        clusterOptions = ' -n 8 -R "span[hosts=1]"'
  } 
}

params.cpu = 8



//Input 
params.reads = "./RAW_DATA/*_R1.fastq.gz"
params.reads_suffix=".fastq.gz"
params.adapter_trim_tag = "Y"
params.DESeq_run_tag = "Y"
params.DESeq_replicates = "Y"
params.analysis_pipeline_run_tag = "Y"

params.sampleinfoxlsx = "SE_Nextflow_pipeline.Human_data.xlsx"
params.studyID = "test_for_publication"
params.compare_group = "all"


params.gtf = "genes.gtf"
params.fasta = "genome.fa"


//(1)With_adapter: "_R\\d+.fastq.gz";(2)Without_adapter: "_\\d+.clipped.fastq.gz"
params.file.extention = '"_R\\d+.fastq.gz"' 

params.sample.manifest.sheetname = "sample.manifest"
params.samplecompare.sheetname = "samplecompare"


//Run TE pipeline
params.TE_pipeline_run_tag = "Y"



//Output
params.TrimmedDir="Trimmed_RawData"
params.FastQCdir="FastQC_Results"
params.AllResultsDir="All_Results"
params.sampleinfoDir="SampleinfoDir"
params.ReportDir="Report_Results"






//Singularity configuration:
process {
    container = '/mnt/RNA_Seq_pipeline.process.simg'
 
    withName:genSampleInfo {
        container = '/mnt/RNA_Seq_pipeline.Sampleinfo.simg'
    }
    withName:QC {
        container = '/mnt/RNA_Seq_pipeline.Sampleinfo.simg'
    }

    withName:sigGene {
        container = '/mnt/RNA_Seq_pipeline.analysis.simg'
    }
    withName:genGSEAinput {
        container = '/mnt/RNA_Seq_pipeline.analysis.simg'
    }

    withName:submitGSEA {
        container = '/mnt/RNA_Seq_pipeline.analysis.simg'
    }

    withName:squireFetch {
        container = '/mnt/TE_pipeline.simg'
    }

    withName:squireClean {
        container = '/mnt/TE_pipeline.simg'
    }

    withName:squireMap {
        container = '/mnt/TE_pipeline.simg'
    }

    withName:squireCountProcess {
        container = '/mnt/TE_pipeline.simg'
    }
    
    withName:sigTE {
        container = '/mnt/RNA_Seq_pipeline.analysis.simg'
    }


}

singularity.enabled = true
singularity.autoMounts = true

